on_state = {
  (print "\e[2J\e[H")
  (print
    (join
      (join "loop: " (string (get state 0))) "\n"
      (join "key: " (get state 1)) "\n"
      (join "mouse xy: " (string (get (get state 2) 0)) ":" (string (get (get state 2) 1))) "         \n"
      (join "click: " (get state 3)) "\n"
      "\n"
    )
  )

  <- state
}

on_loop = {
  state = (set state "" 1)
  state = (set state "" 3)
  state = (set state loop_count 0)
  <- state
}

on_keypress = {
  <- (set state keypress_name 1)
}

on_move = {
  <- (set state mouse_xy 2)
}

on_click = {
  <- (set state (string mouse_code) 3)
}

listeners = (list 
  (list
    on_state
    on_loop
    on_keypress
    on_move
    on_click
  ) 
)

state = (list 0 "" (list 0 0) "")

// set up: hide cursor and clear
(print "\e[?25l\e[2J\e[H")
// initial render
(on_state)

// event loop
(use "./event-loop.crumb" {
  <- (start state listeners)
})

// tear down: show cursor and clear
(print "\e[?25h\e[2J\e[H")

